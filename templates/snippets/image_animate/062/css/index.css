@import url("https://fonts.googleapis.com/css?family=Oswald");
* {
  box-sizing: border-box;
}
body {
  align-items: center;
  background: #333;
  display: flex;
  font-family: 'Oswald', sans-serif;
  justify-content: center;
  margin: 0;
  min-height: 100vh;
  overflow: hidden;
  padding: 0;
}
:root {
  --size: 300;
  --color: rgba(197,239,247,0.5);
  --puddle: rgba(197,239,247,0.75);
  --cube: rgba(197,239,247,0.25);
  --sign: #f62459;
}
.header {
  position: absolute;
  top: 50%;
  left: 50%;
  display: grid;
  font-size: 2rem;
  grid-gap: 10px;
  grid-template-columns: auto auto;
  -webkit-transform: translate(-100%, -200%) rotate(-25deg) translate(20%, 0);
          transform: translate(-100%, -200%) rotate(-25deg) translate(20%, 0);
}
h1 {
  margin: 0;
  display: inline-block;
  color: var(--sign);
  z-index: 3;
  -webkit-filter: drop-shadow(0 0 5px var(--sign));
          filter: drop-shadow(0 0 5px var(--sign));
}
h1:nth-of-type(1) {
  -webkit-animation: blinkers 3s 0.8s infinite steps(1);
          animation: blinkers 3s 0.8s infinite steps(1);
  -webkit-filter: none;
          filter: none;
  color: #efefef;
  opacity: 0.1;
}
@-webkit-keyframes blinkers {
  2%, 4%, 6% {
    color: var(--sign);
    -webkit-filter: drop-shadow(0 0 5px var(--sign));
            filter: drop-shadow(0 0 5px var(--sign));
    opacity: 1;
  }
  0%, 3%, 5%, 7%, 100% {
    color: #efefef;
    -webkit-filter: none;
            filter: none;
    opacity: 0.1;
  }
}
@keyframes blinkers {
  2%, 4%, 6% {
    color: var(--sign);
    -webkit-filter: drop-shadow(0 0 5px var(--sign));
            filter: drop-shadow(0 0 5px var(--sign));
    opacity: 1;
  }
  0%, 3%, 5%, 7%, 100% {
    color: #efefef;
    -webkit-filter: none;
            filter: none;
    opacity: 0.1;
  }
}
.base {
  height: calc(var(--size) * 1px);
  left: 50%;
  position: absolute;
  top: 50%;
  -webkit-transform: translate(-50%, -50%) rotateX(-30deg) rotateY(40deg) translate(-10%, 0);
          transform: translate(-50%, -50%) rotateX(-30deg) rotateY(40deg) translate(-10%, 0);
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
  width: calc(var(--size) * 1px);
}
input {
  cursor: pointer;
  height: 500px;
  left: 50%;
  opacity: 0;
  position: absolute;
  top: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  width: 500px;
  z-index: 2;
}
input:checked ~ .base .cube {
  -webkit-transform: translate(-50%, -50%) rotateX(90deg) translate(0, 50%) rotateX(-90deg) translate3d(0, -50px, 0) scaleY(0);
          transform: translate(-50%, -50%) rotateX(90deg) translate(0, 50%) rotateX(-90deg) translate3d(0, -50px, 0) scaleY(0);
  transition: -webkit-transform 0.5s ease;
  transition: transform 0.5s ease;
  transition: transform 0.5s ease, -webkit-transform 0.5s ease;
}
input:checked ~ .base .cube__side {
  box-shadow: none;
  background: none;
}
input:checked ~ .base .surface .puddle {
  border-radius: 100%;
  background: var(--color);
  -webkit-transform: translate(-50%, 0) scale(2.75);
          transform: translate(-50%, 0) scale(2.75);
  transition: background 0.1s ease, border-radius 0.5s ease, -webkit-transform 0.5s ease;
  transition: background 0.1s ease, border-radius 0.5s ease, transform 0.5s ease;
  transition: background 0.1s ease, border-radius 0.5s ease, transform 0.5s ease, -webkit-transform 0.5s ease;
}
input:checked ~ .base .surface .edge__puddle {
  -webkit-transform: translate(-50%, 0);
          transform: translate(-50%, 0);
}
input:checked ~ .base .surface .face {
  opacity: 1;
  transition: opacity 0.2s 0.8s;
}
input:checked ~ .base .droplet {
  -webkit-animation-name: drop;
          animation-name: drop;
}
input:checked ~ .header h1:nth-of-type(1) {
  color: var(--sign);
  -webkit-animation: none;
          animation: none;
  -webkit-filter: drop-shadow(0 0 5px var(--sign));
          filter: drop-shadow(0 0 5px var(--sign));
  opacity: 1;
}
.droplet {
  -webkit-animation-delay: calc(var(--delay) * 1s);
          animation-delay: calc(var(--delay) * 1s);
  -webkit-animation-duration: 5s;
          animation-duration: 5s;
  -webkit-animation-iteration-count: infinite;
          animation-iteration-count: infinite;
  -webkit-animation-timing-function: linear;
          animation-timing-function: linear;
  background: var(--color);
  bottom: 100%;
  border-radius: 100%;
  height: 10px;
  left: calc(var(--left) * 1%);
  position: absolute;
  width: 10px;
}
@-webkit-keyframes drop {
  5%, 100% {
    opacity: 0;
    -webkit-transform: translateY(calc((var(--size) / 3) * 1px));
            transform: translateY(calc((var(--size) / 3) * 1px));
  }
}
@keyframes drop {
  5%, 100% {
    opacity: 0;
    -webkit-transform: translateY(calc((var(--size) / 3) * 1px));
            transform: translateY(calc((var(--size) / 3) * 1px));
  }
}
.droplets {
  height: calc((var(--size) / 3) * 1px);
  left: 0;
  overflow: hidden;
  position: absolute;
  top: 100%;
  -webkit-transform: rotateX(-90deg) translate(0, calc((var(--size) / 6) * 1px));
          transform: rotateX(-90deg) translate(0, calc((var(--size) / 6) * 1px));
  -webkit-transform-origin: top;
          transform-origin: top;
  width: 100%;
}
.puddle {
  background: transparent;
  border-radius: 0;
  height: calc((var(--size) / 3) * 1px);
  left: 50%;
  position: absolute;
  top: 50%;
  -webkit-transform: translate(-50%, 0%) scale(1);
          transform: translate(-50%, 0%) scale(1);
  transition: background 0.1s 1.3s, border-radius 0.5s 0.8s ease, -webkit-transform 0.5s 0.8s ease;
  transition: background 0.1s 1.3s, border-radius 0.5s 0.8s ease, transform 0.5s 0.8s ease;
  transition: background 0.1s 1.3s, border-radius 0.5s 0.8s ease, transform 0.5s 0.8s ease, -webkit-transform 0.5s 0.8s ease;
  width: calc((var(--size) / 3) * 1px);
}
.surface {
  height: 100%;
  left: 0;
  overflow: hidden;
  position: absolute;
  top: 0;
  -webkit-transform: rotateX(90deg);
          transform: rotateX(90deg);
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
  width: 100%;
}
.surface--clone {
  overflow: visible;
}
.edge {
  height: calc((var(--size) / 6) * 1px);
  left: 0;
  overflow: hidden;
  position: absolute;
  top: 100%;
  -webkit-transform: rotateX(-90deg);
          transform: rotateX(-90deg);
  -webkit-transform-origin: top;
          transform-origin: top;
  width: 100%;
}
.edge__puddle {
  background: var(--puddle);
  height: 200%;
  left: 50%;
  opacity: 0.6;
  position: absolute;
  top: 0;
  -webkit-transform: translate(-50%, -100%);
          transform: translate(-50%, -100%);
  transition: -webkit-transform 0.5s 0.3s ease;
  transition: transform 0.5s 0.3s ease;
  transition: transform 0.5s 0.3s ease, -webkit-transform 0.5s 0.3s ease;
  width: 63%;
}
.surface .face {
  opacity: 0;
  -webkit-transform: translate(-50%, 0) scale(0.5);
          transform: translate(-50%, 0) scale(0.5);
  transition: opacity 0.2s;
}
.surface .mouth {
  -webkit-clip-path: none;
  border-radius: 100%;
  clip-path: none;
}
.face {
  height: 35%;
  left: 50%;
  position: absolute;
  top: 20%;
  -webkit-transform: translate(-50%, 0);
          transform: translate(-50%, 0);
  width: 80%;
}
.eye {
  -webkit-animation: blink 10s infinite linear;
          animation: blink 10s infinite linear;
  background: #000;
  border-radius: 100%;
  height: 20px;
  position: absolute;
  top: 0;
  width: 20px;
}
.eye:after,
.eye:before {
  background: #fff;
  border-radius: 100%;
  content: '';
  position: absolute;
}
.eye:after {
  height: 30%;
  left: 20%;
  top: 15%;
  width: 30%;
}
.eye:before {
  height: 15%;
  left: 25%;
  top: 55%;
  width: 15%;
}
.eye:nth-of-type(1) {
  left: 0;
}
.eye:nth-of-type(2) {
  right: 0;
}
@-webkit-keyframes blink {
  0%, 73%, 75%, 100% {
    -webkit-transform: scaleY(1);
            transform: scaleY(1);
  }
  74% {
    -webkit-transform: scaleY(0.1);
            transform: scaleY(0.1);
  }
}
@keyframes blink {
  0%, 73%, 75%, 100% {
    -webkit-transform: scaleY(1);
            transform: scaleY(1);
  }
  74% {
    -webkit-transform: scaleY(0.1);
            transform: scaleY(0.1);
  }
}
.mouth {
  -webkit-clip-path: circle(50% at 50% 0);
  background: #000;
  bottom: 0;
  clip-path: circle(50% at 50% 0);
  height: 20px;
  left: 40%;
  position: absolute;
  width: 20px;
}
.cube {
  height: calc((var(--size) / 3) * 1px);
  left: 50%;
  position: absolute;
  top: 50%;
  -webkit-transform: translate(-50%, -50%) rotateX(90deg) translate(0, 50%) rotateX(-90deg) translate3d(0, -50px, 0) scaleY(1);
          transform: translate(-50%, -50%) rotateX(90deg) translate(0, 50%) rotateX(-90deg) translate3d(0, -50px, 0) scaleY(1);
  -webkit-transform-origin: bottom;
          transform-origin: bottom;
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
  transition: opacity 0.1s 0.5s ease, -webkit-transform 0.5s 0.8s ease;
  transition: transform 0.5s 0.8s ease, opacity 0.1s 0.5s ease;
  transition: transform 0.5s 0.8s ease, opacity 0.1s 0.5s ease, -webkit-transform 0.5s 0.8s ease;
  width: calc((var(--size) / 3) * 1px);
}
.cube__face {
  height: 100%;
  width: 100%;
}
.cube__side {
  background: var(--cube);
  border-radius: 5px;
  box-shadow: inset 0 0 10px 5px var(--color);
  height: 100%;
  left: 0;
  opacity: 1;
  position: absolute;
  top: 0;
  transition: background 0.1s 0.5s, box-shadow 0.1s 0.5s;
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
  width: 100%;
}
.cube__side:nth-of-type(1) {
  opacity: 1;
  -webkit-transform: translate3d(0, 0, 50px);
          transform: translate3d(0, 0, 50px);
}
.cube__side:nth-of-type(2) {
  -webkit-transform: rotateX(90deg) translate3d(0, 0, 50px);
          transform: rotateX(90deg) translate3d(0, 0, 50px);
}
.cube__side:nth-of-type(3) {
  -webkit-transform: rotateX(180deg) translate3d(0, 0, 50px);
          transform: rotateX(180deg) translate3d(0, 0, 50px);
}
.cube__side:nth-of-type(4) {
  background: transparent;
  -webkit-transform: rotateX(270deg) translate3d(0, 0, 50px);
          transform: rotateX(270deg) translate3d(0, 0, 50px);
}
.cube__side:nth-of-type(5) {
  -webkit-transform: rotateY(90deg) translate3d(0, 0, 50px);
          transform: rotateY(90deg) translate3d(0, 0, 50px);
}
.cube__side:nth-of-type(6) {
  -webkit-transform: rotateY(-90deg) translate3d(0, 0, 50px);
          transform: rotateY(-90deg) translate3d(0, 0, 50px);
}
